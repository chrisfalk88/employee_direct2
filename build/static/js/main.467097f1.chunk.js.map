{"version":3,"sources":["utils/API.js","components/Jumbo.js","App.js","index.js"],"names":["obj","getUsers","axios","get","Jumbo","Jumbotron","fluid","Container","App","state","search","ogEmployees","employees","handleInputChange","event","value","target","name","filteredPeople","filter","employee","first","toLowerCase","startsWith","last","setState","handleFormSubmit","preventDefault","API","then","res","console","log","data","results","catch","err","className","Form","onSubmit","this","Group","controlId","Label","Control","type","placeholder","onChange","Table","striped","bordered","hover","size","map","i","login","username","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAUeA,EANH,CACVC,SAAU,WACR,OAAOC,IAAMC,IAJD,mD,gBCYDC,MAXf,WACI,OACF,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,iEACA,8ECgFSC,G,kNAhFbC,MAAQ,CACNC,OAAQ,GACRC,YAAa,GACbC,UAAW,I,EAcbC,kBAAoB,SAACC,GAAW,IAAD,EAEvBC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAEpBC,EAAiB,EAAKT,MAAME,YAAYQ,QAC5C,SAACC,GAAD,OACEA,EAASH,KAAKI,MAAMC,cAAcC,WAAWR,EAAMO,gBACnDF,EAASH,KAAKO,KAAKF,cAAcC,WAAWR,EAAMO,kBAItD,EAAKG,UAAL,mBACGR,EAAOF,GADV,0BAEaG,GAFb,K,EAMFQ,iBAAmB,SAACZ,GAClBA,EAAMa,kB,kEA/Ba,IAAD,OAClBC,EAAI3B,WACD4B,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChB,EAAKR,SAAS,CACZd,YAAamB,EAAIG,KAAKC,QACtBtB,UAAWkB,EAAIG,KAAKC,aAGvBC,OAAM,SAACC,GAAD,OAASL,QAAQC,IAAII,Q,+BA0B9B,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKd,iBAArB,SACE,eAACY,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,qBACA,cAACL,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,YAAY,sBACZC,SAAUP,KAAK3B,kBACfI,KAAK,SACLF,MAAOyB,KAAK/B,MAAMC,cAIxB,eAACsC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAnC,UACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,gCACGZ,KAAK/B,MAAMG,UAAUyC,KAAI,SAACjC,EAAUkC,GAAX,OACxB,+BACE,6BAAKA,EAAI,IACT,6BAAKlC,EAASH,KAAKI,QACnB,6BAAKD,EAASH,KAAKO,OACnB,6BAAKJ,EAASmC,MAAMC,aAJbF,kB,GAnELG,c,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.467097f1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=100&nat=us\";\n\nconst obj = {\n  getUsers: function () {\n    return axios.get(BASEURL);\n  },\n};\n\nexport default obj;","import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Jumbo() {\n    return (\n  <Jumbotron fluid>\n    <Container>\n      <h1>Employee Tracking System v. 2.7</h1>\n      <p>something something something something</p>\n    </Container>\n  </Jumbotron>\n    )\n}\n\nexport default Jumbo;","import { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport API from \"./utils/API.js\";\nimport Jumbo from \"./components/Jumbo.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    ogEmployees: [],\n    employees: [],\n  };\n  componentDidMount() {\n    API.getUsers()\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          ogEmployees: res.data.results,\n          employees: res.data.results,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    // Getting the value and name of the input which triggered the change\n    const value = event.target.value;\n    const name = event.target.name;\n\n    const filteredPeople = this.state.ogEmployees.filter(\n      (employee) =>\n        employee.name.first.toLowerCase().startsWith(value.toLowerCase()) ||\n        employee.name.last.toLowerCase().startsWith(value.toLowerCase())\n    );\n\n    // Updating the input's state\n    this.setState({\n      [name]: value,\n      employees: filteredPeople,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jumbo />\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Search</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search for a person\"\n              onChange={this.handleInputChange}\n              name=\"search\"\n              value={this.state.search}\n            />\n          </Form.Group>\n        </Form>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.employees.map((employee, i) => (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{employee.name.first}</td>\n                <td>{employee.name.last}</td>\n                <td>{employee.login.username}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// 16, 17, 19"],"sourceRoot":""}